---
# NAT44 configuration
apiVersion: pantheon.tech/v1
kind: CNFConfiguration
metadata:
  name: cnf-nat44-config
spec:
  microservice: cnf-nat44
  configItems:
    - module: vpp.nat
      type: nat44-interface
      data: |-
        name: gateway
        nat_outside: true
        output_feature: true

    - module: vpp.nat
      type: nat44-interface
      data: |-
        name: client0
        nat_inside: true

    - module: vpp.nat
      type: nat44-pool
      data: |-
        first_ip: 80.80.80.102

    - module: cnf.nsm
      version: v1
      type: client
      data: |-
        name: access-to-webserver
        network_service: cnf-nat-example
        outgoing_labels:
          - key: app
            value: nat44
        interface_name: gateway
        interface_type: MEM_INTERFACE
        ipAddresses:
          - "80.80.80.102/30"
    - module: cnf.nsm
      version: v1
      type: endpoint
      data: |-
        network_service: cnf-nat-example
        advertised_labels:
          - key: app
            value: nat44
        single_client: true
        interface_name_prefix: client
        interface_type: MEM_INTERFACE
        ipAddresses:
          - "192.168.100.1/24"

---
# CNF-NAT44 pod definition
apiVersion: v1
kind: Pod
metadata:
  name: cnf-nat44
  labels:
    cnf: cnf-nat44
spec:
  containers:
    - name: cnf-nat44
      image: pantheontech/nsm-agent-vpp:v3.1.0
      imagePullPolicy: IfNotPresent
      securityContext:
        privileged: true
      ports:
        - containerPort: 9191
          name: http
      env:
        - name: ETCD_CONFIG
          value: "/etc/etcd/etcd.conf"
        - name: MICROSERVICE_LABEL
          value: "cnf-nat44"
        - name: ETCD_EXPAND_ENV_VARS
          value: "true"
      resources:
        limits:
          networkservicemesh.io/socket: 1
      volumeMounts:
        - name: etcd-cfg
          mountPath: /etc/etcd
  volumes:
    - name: etcd-cfg
      configMap:
        name: cnf-etcd-cfg
